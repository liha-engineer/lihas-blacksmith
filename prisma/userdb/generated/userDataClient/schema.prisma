// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/userDataClient"
}

datasource userdb {
  provider = "mysql"
  url      = env("USERDB_URL")
}

// enum 타입을 줄 수도 있다!
// 인벤토리 칸수를 제한하고 싶으면 inventory로 default를 정해주는 것도 좋다 

enum ItemType {
  WEAPON
  ARMOUR
  GLOVE
  SHOES
  ACCESORY
  DISPOSABLE
}

model Account {
  accountId Int      @id @default(autoincrement())
  id        String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())

  characters Characters[]

  @@map("Account")
}

model Characters {
  characterId    Int      @id @default(autoincrement())
  accountId      Int
  characterName  String   @unique
  inventoryCount Int      @default(10)
  hp             Int      @default(500)
  atk            Int      @default(100)
  money          Int      @default(10000)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  account      Account        @relation(fields: [accountId], references: [accountId], onDelete: Cascade)
  inventory    Inventory[]
  equippeditem EquippedItem[]

  @@map("Characters")
}

model Inventory {
  inventoryId Int    @id @default(autoincrement())
  characterId Int
  itemId      Int
  itemName    String
  itemCount   Int

  characters    Characters      @relation(fields: [characterId], references: [characterId], onDelete: Cascade)
  inventoryitem InventoryItem[]

  @@map("Inventory")
}

model InventoryItem {
  inventoryItemId Int @id
  inventoryId     Int

  inventory Inventory @relation(fields: [inventoryId], references: [inventoryId])

  @@map("InventoryItem")
}

model EquippedItem {
  equippedItemId   Int      @id @default(autoincrement())
  characterId      Int
  equippedItemName String
  type             ItemType

  characters Characters @relation(fields: [characterId], references: [characterId], onDelete: Cascade)

  @@map("EquippedItem")
}
